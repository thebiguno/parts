<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ca.digitalcave.parts.data.PartsMapper">
	<resultMap type="ca.digitalcave.parts.model.Category" id="category">
		<result property="id" column="category_id"/>
		<result property="name" column="category_name"/>
		<collection property="families" javaType="list" ofType="ca.digitalcave.parts.model.Family">
			<id property="categoryId" column="category_id"/>
			<id property="familyId" column="family_id"/>
			<result property="name" column="family_name"/>
			<collection property="parts" javaType="list" ofType="ca.digitalcave.parts.model.Part">
				<id property="id" column="part_id"/>
			</collection>
		</collection>
	</resultMap>

	<select id="search" resultMap="category">
select distinct p.part_id, p.part_no, p.description, f.family_id, f.name family_name, c.category_id, c.name category_name 
from category c 
inner join family f on c.category_id = f.category_id
inner join part p on f.family_id = p.family_id
inner join attribute a on p.part_id = a.part_id
		<where>
			<if test="terms.size() gt 0">
				<foreach collection="terms" item="term" separator=" or ">
lower(a.val) like '%${term}%' or lower(a.name) like '%${term}%'
				</foreach>
			</if>
		</where>
order by c.name, f.name
	</select>
	
	<select id="attributesByPart" resultType="ca.digitalcave.parts.model.Attribute">
select name, value, href
from attribute
where part_id = ${partId}
order by sort, name
	</select>
	
	<resultMap id="partsByFamily" type="ca.digitalcave.parts.model.Part">
		<id property="id" column="part_id"/>
		<collection property="attributes" javaType="list" ofType="ca.digitalcave.parts.model.Attribute">
			<result property="name" column="name"/>
			<result property="value" column="value"/>
			<result property="href" column="href"/>
		</collection>
	</resultMap>
	
	<select id="partsByFamily" resultMap="partsByFamily">
select a.part_id, a.name, a.value, a.href
from attribute a
inner join attribute f on a.part_id = f.part_id and f.name = 'Family' <if test="family != null">and f.value = #{family}</if>
inner join attribute c on a.part_id = c.part_id and c.name = 'Category' <if test="category != null">and c.value = #{category}</if>
inner join attribute p on a.part_id = p.part_id and p.name = 'Manufacturer Part Number'
order by c.name, f.name, p.value
	</select>


	<insert id="insertCategory">
		<selectKey order="BEFORE" resultType="int" keyProperty="category.id">
select coalesce(max(category_id),0) + 1 from category
		</selectKey>
insert into category (category_id, account_id, name, created_at, modified_at)
values (#{category.id}, #{category.account.id}, #{category.name}, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
	</insert>
	<update id="updateCategory">
update category set name = #{category.name}, modified_at = CURRENT_TIMESTAMP
where category_id = #{category.id}
	</update>
	<delete id="deleteCategory">
delete category
where category_id = #{id}
	</delete>
	
	<insert id="insertFamily">
		<selectKey order="BEFORE" resultType="int" keyProperty="family.id">
select coalesce(max(family_id),0) + 1 from family
		</selectKey>
insert into family (family_id, category_id, name, created_at, modified_at)
values (#{family.id}, #{family.category.id}, #{category.name}, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
	</insert>
	<update id="updateFamily">
update family set name = #{family.name}, modified_at = CURRENT_TIMESTAMP
where family_id = #{family.id}
	</update>
	<delete id="deleteFamily">
delete family
where family_id = #{id}
	</delete>

	<insert id="insertPart">
		<selectKey order="BEFORE" keyProperty="id">
select coalesce(max(part_id),0) + 1 from part
		</selectKey>
insert into part (part_id, family_id, available, minimum, part_no, description, notes)
values (#{part.id}, #{part.family.id}, #{part.available}, #{part.minimum}, #{part.number}, #{part.description}, #{part.description}));
	</insert>
	<update id="updatePart">
update part
		<set>
			<if test="part.family != null">family_id = #{part.family.id},</if>
			<if test="part.available != null">available = #{part.available},</if>
			<if test="part.minimum != null">minimum = #{part.minimum},</if>
			<if test="part.number != null">part_no = #{part.number},</if>
			<if test="part.description != null">description = #{part.description},</if>
			<if test="part.notes != null">notes = #{parts.notes},</if>
		</set>
where part_id = #{part.id}
	</update>
	<delete id="deletePart">
delete part
where part_id = #{id}
	</delete>
	
	<insert id="insertAttribute">
insert into attribute (part_id, name, value, href, sort)
values (#{attribute.part.id}, #{attribute.name}, #{attribute.value}, #{attribute.href,jdbcType=VARCHAR}, #{attribute.sort})
	</insert>
	<update id="updateAttribute">
update attribute
		<set>
			<if test="attribute.name != null">name = #{attribute.name},</if>
			<if test="attribute.value != null">value = #{attribute.value},</if>
			<if test="attribute.href != null">href = #{attribute.href},</if>
			<if test="attribute.sort != null">sort = #{attribute.sort},</if>
		</set>
where attribute_id = #{attribute.id}
	</update>
	<delete id="deleteAttrtibute">
delete from attribute
where attribute_id = #{id}
	</delete>
	
	<select id="selectAccount">
select account_id, email, secret, created_at, modified_at
from account
where identifier = #{identifier}
	</select>

</mapper>